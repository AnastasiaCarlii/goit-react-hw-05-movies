{"version":3,"file":"static/js/722.f1f3f5cc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","services/api.jsx","hooks/useFetchTrendingMovies.js","hooks/useFetchMoviesByQuery.js","hooks/useFetchMovieDetails.js","hooks/useFetchMoviesCast.js","hooks/useFetchMovieReviews.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"movieLink\":\"MoviesList_movieLink__QlD4H\",\"movieImage\":\"MoviesList_movieImage__xaeaC\",\"movieTitle\":\"MoviesList_movieTitle__CxO8p\",\"trending\":\"MoviesList_trending__CIrxS\"};","import React from 'react';\nimport defaultImg from 'img/notFound.png';\nimport { Link, useLocation } from 'react-router-dom';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <h2 className={styles.trending}>Trending today</h2>\n      <ul className={styles.moviesList}>\n        {movies.map(({ id, title, name, original_title, poster_path }) => (\n          <Link\n            to={`/movies/${id}`}\n            key={id}\n            className={styles.movieLink}\n            state={{ from: location }}\n          >\n            {' '}\n            <li className={styles.movieItem}>\n              <img\n                className={styles.movieImage}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                    : defaultImg\n                }\n                alt={title || name || original_title}\n              />\n              <p className={styles.movieTitle}>\n                {title || name || original_title}\n              </p>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\nconst API_KEY = '22a5ac0887c10804847656f832680839';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return { movies, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoadind] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) {\n      return;\n    }\n    setIsLoadind(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoadind(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n  const onHandleSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return { movies, isLoading, error, onHandleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getMovieDetails(movieId);\n\n        setMovieDetails(data);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMoviesCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return { cast, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n  return { reviews, isLoading, error };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchInput\":\"SearchForm_searchInput__h6REp\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","import { useState } from 'react';\n\nimport styles from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') return alert('can not be empty');\n    onSubmit(query);\n  };\n  return (\n    <form onSubmit={handleSubmit} className={styles.searchForm}>\n      <input\n        name=\"query\"\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        className={styles.searchInput}\n      />\n      <button type=\"submit\" className={styles.searchButton}>\n        {' '}\n        Search\n      </button>\n    </form>\n  );\n};\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useFetchMoviesByQuery } from 'hooks';\n\nconst Movies = () => {\n  const { movies, isLoading, error, onHandleSubmit } = useFetchMoviesByQuery();\n  return (\n    <>\n      <SearchForm onSubmit={onHandleSubmit} />\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["_ref","movies","location","useLocation","_jsxs","children","_jsx","className","styles","map","_ref2","id","title","name","original_title","poster_path","Link","to","concat","state","from","src","defaultImg","alt","API_KEY","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMoviesByQuery","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","t0","finish","useFetchMoviesByQuery","setIsLoadind","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","onHandleSubmit","value","q","useFetchMovieDetails","movieDetails","setMovieDetails","useParams","fetchMovieDetails","message","useFetchMoviesCast","setCast","fetchCast","useFetchMovieReviews","reviews","setReviews","fetchReview","SearchForm","onSubmit","setQuery","e","preventDefault","trim","alert","type","onChange","target","_useFetchMoviesByQuer","_Fragment","Loader","length","MoviesList"],"sourceRoot":""}