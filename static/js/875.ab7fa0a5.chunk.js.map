{"version":3,"file":"static/js/875.ab7fa0a5.chunk.js","mappings":"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","sources":["services/api.jsx","hooks/useFetchTrendingMovies.js","hooks/useFetchMoviesByQuery.js","hooks/useFetchMovieDetails.js","hooks/useFetchMoviesCast.js","hooks/useFetchMovieReviews.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '22a5ac0887c10804847656f832680839';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return { movies, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoadind] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) {\n      return;\n    }\n    setIsLoadind(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoadind(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n  const onHandleSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return { movies, isLoading, error, onHandleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getMovieDetails(movieId);\n\n        setMovieDetails(data);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\n\nexport const useFetchMoviesCast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getCast(movieId);\n        setCast(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return { cast, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/api';\n\nexport const useFetchMovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReview = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReview();\n  }, [movieId]);\n  return { reviews, isLoading, error };\n};\n","import defaultImg from 'img/notFound.png';\nimport { Link } from 'react-router-dom';\n\nexport const MovieInfo = ({ movieDetails }) => {\n  const {\n    title,\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movieDetails;\n  const allGenres = genres.map(genre => genre.name).join(', ');\n  return (\n    <div>\n      <img\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n            : defaultImg\n        }\n        alt={title || original_title}\n      />\n      <div>\n        <h1>{title || original_title}</h1>\n        <p>Дата виходу: {release_date}</p>\n        <p>Оцінка :{vote_average}</p>\n        <h2>Опис фільму{overview}</h2>\n        <p>Жанри:{allGenres}</p>\n      </div>\n      <div>\n        <h2>додаткова інформація</h2>\n        <Link to=\"cast\">Cast</Link>\n        <Link to=\"reviews\">Reviews</Link>\n      </div>\n    </div>\n  );\n};\n","import Loader from 'components/Loader/Loader';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useFetchMovieDetails } from 'hooks';\nimport { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieDetails, isLoading, error } = useFetchMovieDetails();\n  const location = useLocation();\n  const goBack = useRef(location?.state?.from ?? '/');\n\n  return (\n    <>\n      <Link to={goBack.current}>\n        <button>Go Back</button>\n      </Link>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movieDetails && <MovieInfo movieDetails={movieDetails} />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","getCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","t0","finish","useFetchMoviesByQuery","setIsLoadind","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","onHandleSubmit","value","q","useFetchMovieDetails","movieDetails","setMovieDetails","useParams","fetchMovieDetails","message","useFetchMoviesCast","setCast","fetchCast","useFetchMovieReviews","reviews","setReviews","fetchReview","MovieInfo","title","original_title","genres","overview","poster_path","release_date","vote_average","allGenres","map","genre","name","join","_jsxs","children","_jsx","src","defaultImg","alt","Link","to","_location$state$from","_location$state","_useFetchMovieDetails","location","useLocation","goBack","useRef","state","from","_Fragment","current","Loader","Suspense","fallback","Outlet"],"sourceRoot":""}