{"version":3,"file":"static/js/875.31894100.chunk.js","mappings":"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","sources":["services/api.jsx","hooks/useFetchTrendingMovies.js","hooks/useFetchMoviesByQuery.js","hooks/useFetchMovieDetails.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '22a5ac0887c10804847656f832680839';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return { movies, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoadind] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) {\n      return;\n    }\n    setIsLoadind(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoadind(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n  const onHandleSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return { movies, isLoading, error, onHandleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n};\n","import Loader from 'components/Loader/Loader';\nimport { useFetchMovieDetails } from 'hooks';\n\nexport const MovieInfo = ({ movieId }) => {\n  const { movieDetails, isLoading, error } = useFetchMovieDetails(movieId);\n  if (isLoading) return <Loader />;\n  if (error) return <p> {error}</p>;\n  if (!movieDetails)\n    return <p>There is no information about this movie, sorry.</p>;\n  const genreNames = movieDetails.genres.map(genre => genre.name);\n  return (\n    <div>\n      {' '}\n      <h1>{movieDetails.title}</h1>\n      <h2>Overview</h2>\n      <p>{movieDetails.overview}</p>\n      <h3>Genres</h3>\n      <p>{genreNames}</p>\n    </div>\n  );\n};\n","import { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  // console.log(movieId);\n  return <MovieInfo movieId={movieId} />;\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","results","stop","apply","arguments","getMoviesByQuery","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","t0","finish","useFetchMoviesByQuery","setIsLoadind","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","onHandleSubmit","value","q","useFetchMovieDetails","movieDetails","setMovieDetails","fetchMovieDetails","message","MovieInfo","_useFetchMovieDetails","_jsx","Loader","_jsxs","children","genreNames","genres","map","genre","name","title","overview","useParams"],"sourceRoot":""}