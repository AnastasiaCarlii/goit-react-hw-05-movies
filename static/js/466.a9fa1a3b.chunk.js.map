{"version":3,"file":"static/js/466.a9fa1a3b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","services/api.jsx","hooks/useFetchTrendingMovies.js","hooks/useFetchMoviesByQuery.js","hooks/useFetchMovieDetails.js","pages/Home.jsx"],"sourcesContent":["import React from 'react';\nimport defaultImg from 'img/notFound.png';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title, name, original_title, poster_path }) => (\n        <Link to={`/movies/${id}`} key={id}>\n          {' '}\n          <li>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                  : defaultImg\n              }\n              alt={title || name || original_title}\n            />\n            <p>{title || name || original_title}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\nconst API_KEY = '22a5ac0887c10804847656f832680839';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const getMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nexport const useFetchTrendingMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return { movies, isLoading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/api';\n\nexport const useFetchMoviesByQuery = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoadind] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('q');\n    if (!query) {\n      return;\n    }\n    setIsLoadind(true);\n    const fetchData = async () => {\n      try {\n        const data = await getMoviesByQuery(query);\n        setMovies(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoadind(false);\n      }\n    };\n    fetchData();\n  }, [searchParams]);\n  const onHandleSubmit = value => {\n    setSearchParams({ q: value });\n  };\n\n  return { movies, isLoading, error, onHandleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = movieId => {\n  const [movieDetails, setMovieDetails] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const fetchMovieDetails = async () => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (e) {\n        setError(e.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, error };\n};\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useFetchTrendingMovies } from 'hooks';\n\nimport React from 'react';\n\nconst Home = () => {\n  const { movies, isLoading, error } = useFetchTrendingMovies();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p>Something went wrong</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_ref","movies","_jsx","children","map","_ref2","id","title","name","original_title","poster_path","_jsxs","Link","to","concat","src","defaultImg","alt","API_KEY","axios","getTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","getMoviesByQuery","_callee2","query","_yield$axios$get2","_context2","_x","getMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","useFetchTrendingMovies","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchData","t0","finish","useFetchMoviesByQuery","setIsLoadind","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","onHandleSubmit","value","q","useFetchMovieDetails","movieDetails","setMovieDetails","fetchMovieDetails","message","_useFetchTrendingMovi","_Fragment","Loader","length","MoviesList"],"sourceRoot":""}